<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddFilmButton" xml:space="preserve">
    <value>Add Film</value>
    <comment>The text on the button that allows users to add films</comment>
  </data>
  <data name="BehindTheScenesAddButton" xml:space="preserve">
    <value>Add section</value>
    <comment>The text shown on the button that allows users to add behind the scenes</comment>
  </data>
  <data name="BehindTheScenesHeadlineLabel" xml:space="preserve">
    <value>Headline:</value>
    <comment>The text shown for behind the scenes headline</comment>
  </data>
  <data name="BehindTheScenesIntroductionTextLabel" xml:space="preserve">
    <value>Introduction Text:</value>
    <comment>The text shown for behind the scenes intro text</comment>
  </data>
  <data name="BehindTheScenesSectionLabel" xml:space="preserve">
    <value>Body:</value>
    <comment>The text shown for behind the scenes label</comment>
  </data>
  <data name="BehindTheScenesTab" xml:space="preserve">
    <value>Behind The Scenes</value>
    <comment>The text on the behind the scenes tab of the DetailView</comment>
  </data>
  <data name="BTSError" xml:space="preserve">
    <value>The Behind-The-Scenes sections were not setup correctly.</value>
    <comment>Error message content</comment>
  </data>
  <data name="CancelButton" xml:space="preserve">
    <value>Cancel</value>
    <comment>The text shown on the button to cancel editing</comment>
  </data>
  <data name="CreditPersonsLabel" xml:space="preserve">
    <value>Persons:</value>
    <comment>The text shown for the label of each person property for a credit object</comment>
  </data>
  <data name="CreditPrimaryCheckbox" xml:space="preserve">
    <value>Is a primary credit</value>
    <comment>The text shown for the checkbox on each credit</comment>
  </data>
  <data name="CreditRoleLabel" xml:space="preserve">
    <value>Role:</value>
    <comment>The text shown for the label of each role property in a credit object</comment>
  </data>
  <data name="CreditsAddButton" xml:space="preserve">
    <value>Add Credit</value>
    <comment>The text shown for the button to add a credit</comment>
  </data>
  <data name="CreditsError" xml:space="preserve">
    <value>One or more of the provided credits provided are too short.</value>
    <comment>Error message content</comment>
  </data>
  <data name="CreditsTab" xml:space="preserve">
    <value>Credits</value>
    <comment>The text on the credits tab of the detail view</comment>
  </data>
  <data name="DeleteButton" xml:space="preserve">
    <value>Delete</value>
    <comment>The text shown on a delete button</comment>
  </data>
  <data name="DeleteFilmButton" xml:space="preserve">
    <value>Delete Film</value>
    <comment>The text shown on the button to delete films</comment>
  </data>
  <data name="DeleteFilmConfirmationText" xml:space="preserve">
    <value>Are you sure you want to delete this film?</value>
    <comment>The text shown when a user wants to delete a film</comment>
  </data>
  <data name="DeleteFilmConfirmationTitle" xml:space="preserve">
    <value>Please confirm</value>
    <comment>The text shown in the title bar for the deletion confirmation dialog</comment>
  </data>
  <data name="EditFilmButton" xml:space="preserve">
    <value>Edit Film</value>
    <comment>The text on the button that allows users to edit films</comment>
  </data>
  <data name="ErrorMessageBoxTitle" xml:space="preserve">
    <value>Oops... Something is wrong</value>
    <comment>Error message content</comment>
  </data>
  <data name="FilmIdLabel" xml:space="preserve">
    <value>Film ID:</value>
    <comment>The text shown for film id</comment>
  </data>
  <data name="FilmTab" xml:space="preserve">
    <value>Film</value>
    <comment>The text on the film tab of the DetailView</comment>
  </data>
  <data name="GeneralError" xml:space="preserve">
    <value>The film could not be saved. Please check all entries and try again.</value>
    <comment>Error message content</comment>
  </data>
  <data name="ImagesTab" xml:space="preserve">
    <value>Images</value>
    <comment>The text on the images tab of the detail view</comment>
  </data>
  <data name="IncorrectDescriptionError" xml:space="preserve">
    <value>The description information entered is too short.</value>
    <comment>Error message content</comment>
  </data>
  <data name="IncorrectFilmTimeError" xml:space="preserve">
    <value>The provided length of the film is not valid.</value>
    <comment>Error message content</comment>
  </data>
  <data name="IncorrectTitleError" xml:space="preserve">
    <value>The entered title is invalid.</value>
    <comment>Error message content</comment>
  </data>
  <data name="IncorrectVideoLinkError" xml:space="preserve">
    <value>The video link provided for the film is not valid.</value>
    <comment>Error message content</comment>
  </data>
  <data name="LengthLabel" xml:space="preserve">
    <value>Length:</value>
    <comment>The text shown for video length</comment>
  </data>
  <data name="LongDescriptionLabel" xml:space="preserve">
    <value>Long Description:</value>
    <comment>The text shown for long description</comment>
  </data>
  <data name="NoCategoriesError" xml:space="preserve">
    <value>You did not provide any categories for this film.</value>
    <comment>Error message content</comment>
  </data>
  <data name="ReachOutError" xml:space="preserve">
    <value>The Reach Out content provided is too short.</value>
    <comment>Error message content</comment>
  </data>
  <data name="ReachOutLabel" xml:space="preserve">
    <value>Reach Out Content:</value>
    <comment>The text shown above the textbox under the reach out tab</comment>
  </data>
  <data name="ReachOutTab" xml:space="preserve">
    <value>Reach Out</value>
    <comment>The text on the reach out tab of the detail view</comment>
  </data>
  <data name="RevertButton" xml:space="preserve">
    <value>Revert</value>
    <comment>The text shown when a user wants to revert to a saved film</comment>
  </data>
  <data name="SaveButton" xml:space="preserve">
    <value>Save</value>
    <comment>The text shown when a user wants to save a film</comment>
  </data>
  <data name="SearchFieldText" xml:space="preserve">
    <value>Search...</value>
    <comment>The default text that is shown in the search box</comment>
  </data>
  <data name="ShortDescriptionLabel" xml:space="preserve">
    <value>Short Description:</value>
    <comment>The text shown for short description</comment>
  </data>
  <data name="TitleLabel" xml:space="preserve">
    <value>Title:</value>
    <comment>The text shown for title</comment>
  </data>
  <data name="VideoLinkLabel" xml:space="preserve">
    <value>Video Link:</value>
    <comment>The text shown for video link</comment>
  </data>
</root>